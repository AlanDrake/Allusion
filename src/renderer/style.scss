/** Overwriting default Blueprint variables */
$pt-grid-size: 10px;

/* using node-style package resolution in a CSS file:  */
@import "~normalize.css";
@import "~@blueprintjs/core/src/blueprint.scss";
@import "~@blueprintjs/select/lib/css/blueprint-select.css";
@import "~@blueprintjs/core/src/common/_variables.scss";

:focus {
  outline: none !important;
}
// Adjustment Colors
$black: #050505 !default;

$dark-gray1: #181818 !important;
$dark-gray2: #222222 !important;
$dark-gray3: #282828 !important;
$dark-gray4: #495057 !important;
$dark-gray5: #3e3e3e !important;

$gray1: #5c7080 !important;
$gray2: #738694 !important;
$gray3: #8a9ba8 !important;
$gray4: #a7b6c2 !important;
$gray5: #bfccd6 !important;

$light-gray1: #919191;
$light-gray2: #d8e1e8 !important;
$light-gray3: #e1e8ed !important;
$light-gray4: #ebf1f5 !important;
$light-gray5: #f7f9fa !important; //#f5f8fa !default;
$white: #ffffff !default;

// Core colors

$blue1: #1d64c0 !important;
$blue2: #007af5 !important;
$blue3: #009de0 !important;
$blue4: #2b95d6 !important;
$blue5: #48aff0 !important;

$yellow1: #f7ea3a !important;

// @import "~@blueprintjs/core/src/common/color-aliases";
/**
 * Custom CSS
 */
$sidebar-width: 18em;
$thumbnail-size: calc((100vw - 16rem) / 6);

html {
  height: 100%;
  // margin-top: 22px;
    -webkit-font-smoothing: antialiased;
}
// html .bp3-dark{
//   background: $dark-gray2;
// }
// html .bp3-light{
//   background: $light-gray5;
// }

/* Prevent text selection in all HTML elements for more native feel */
*,
*::after,
*::before {
  -webkit-user-select: none;
}

body {
  background: $dark-gray1;
  margin: 0px;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
body .bp3-light {
  color: $light-gray1;
}
#app {
  --outliner-width: 16em;
  --inspector-width: 24em;
  --toolbar-height: 2.4rem;
  --content-area-height: calc(100vh - var(--toolbar-height));
}

main {
  grid-area: main;
  overflow: auto;
}

#layoutContainer {
  display: grid;
  grid-template-rows: var(--toolbar-height) var(--content-area-height);
  grid-template-columns: min-content 1fr min-content;
  grid-template-areas:
    "toolbar toolbar toolbar"
    "outliner main inspector";
}
#layoutContainer.bp3-dark {
  background: $dark-gray1;
}
#layoutContainer.bp3-light {
  background: $light-gray5;
}
#toolbar {
  grid-area: toolbar;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 0.5rem;
  border-bottom: 3px solid $dark-gray1;
}

nav .bp3-dark,
.bp3-dark #toolbar,
.bp3-dark #inspector,
.bp3-dark nav,
.bp3-dark #outliner {
  background-color: $dark-gray2;
}
nav .bp3-light,
.bp3-light #toolbar,
.bp3-light #inspector,
.bp3-light nav,
.bp3-light #outliner {
  background-color: $light-gray5 !important;
}
.thumbnail {
  // This is to demanding on processor
  // transition: all 0.1s ease-in-out;
  width: $thumbnail-size;
  height: $thumbnail-size;
  display: inline-block;
  position: relative;
  overflow: hidden;
  border-radius: 0.25rem;
  margin: 0.25rem;
}

.thumbnail img {
  // This is to demanding on processor
  // transition: all 0.1s ease-in-out;
  width: $thumbnail-size;
  height: $thumbnail-size;
  object-fit: cover;
  cursor: pointer;
  margin-left: auto;
  margin-right: auto;
  display: block;
  transform-origin: center;
  transform: scale(1);
}

.thumbnail.selected {
  background: $blue1;
}

.thumbnail.selected img {
  transform: scale(0.9);
}

.thumbnail.open img {
  outline-color: red;
  outline-width: 5px;
  outline-offset: -5px;
  outline-style: solid;
}

.thumbnail.droppable {
  background: $yellow1;
}

.thumbnail.undroppable {
  background: $pt-intent-warning;
}

.thumbnail.droppable img {
  transform: scale(0.95);
}

.thumbnailTags {
  // This is to demanding on process
  // transition: height 0.1s ease-in-out;
  background-color: rgba(0, 0, 0, 0.25);
  width: 100%;
  height: auto;
  padding: 0.4em 0.4rem 0.15rem 0.4rem;
  position: absolute;
  bottom: 0;
}

.thumbnailTags > * {
  margin: 0.5em;
}

// Nav
nav {
  grid-area: outliner;
  overflow: auto;
  flex-shrink: 0;
  width: 0;
  min-width: 0;
  transition: min-width 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
.bp3-dark nav {
  background: $dark-gray2;
}

nav.outlinerOpen {
  min-width: var(--outliner-width);
  width: 16rem;
}

nav .bp3-tree {
  background-color: $dark-gray2;
}
.bp3-light nav .bp3-tree {
  background-color: $light-gray2;
}

nav .bp3-heading {
  margin: 0.5em 1rem;
}
.bp3-dark .bp3-heading {
  color: $light-gray1;
}

#search-form {
  margin: 0.5em 1rem;
  outline: none;
}

.gallery {
  width: 100%;
  height: 100%;
  padding: 8px;
}

.popoverContent {
  padding: 0.5em;
  max-width: 32em;
}

#query-overview .bp3-tag {
  margin: 0 0 0.5em 0.5em;
}

#inspector {
  grid-area: inspector;
  overflow: auto;
  flex-shrink: 0;
  width: 0;
  min-width: 0;
  transition: min-width 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

#inspector.inspectorOpen {
  min-width: var(--inspector-width);
  width: 18rem;
}

#inspector > section {
  border-bottom: 3px solid #181818;
  padding: 1em;
}

.inpectorHeading {
  font-weight: bold;
}

// The fill option of the MultiTagSelect does not work atm. Workaround is to manually set width
#inspector .bp3-popover-target {
  width: 100%;
}
#search-form .bp3-popover-target {
  width: 100%;
}

#filePreview > img {
  padding: 0.3em;
  background-color: #333333;
  width: 100%;
  max-height: calc(var(--inspector-width) - 2em);
  object-fit: contain;
}

#fileOverview {
  text-align: center;
}

#fileInfo {
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-column-gap: 1em;
}

#fileInfo > div {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.fileInfoValue {
  text-align: right;
}

#fileTag .bp3-tag {
  margin-bottom: 5px;
  margin-right: 5px;
}

.contextMenuTarget {
  outline-color: $pt-intent-primary;
  outline-width: 2px;
  outline-offset: -2px;
  outline-style: solid;
}

.bp3-tree-node .reorder-target {
  border-bottom: 2px solid $blue1;
}

.bp3-tree-node .reorder-source,
.bp3-tree-node .reorder-source > div {
  opacity: 0.2;
}
// .bp3-tree-node-label > div > .reorder-target.reorder-source > div {
//   padding: 1rem;
// }

// Reduce default padding-left of Blueprint tree rows
// Only divided `$tree-row-height` by 2, doesn't look very nice
// Adjusted from @blueprintjs/core/src/components/tree_tree.scss
// $tree-row-height: $pt-grid-size * 3 !default;
// $tree-icon-spacing: ($tree-row-height - $pt-icon-size-standard) / 2 !default;
// @for $i from 0 through 20 {
//   .#{$ns}-tree-node-content-#{$i} {
//     padding-left: ($tree-row-height / 2 - $tree-icon-spacing) * $i;
//   }
// }

// --outliner-width + --thumbnail-size
@media (max-width: 40em) {
  #inspector.inspectorOpen {
    min-width: 0;
  }
}

// --outliner-width
@media (max-width: 16em) {
  #inspector {
    display: none;
  }

  nav {
    display: none;
  }
}

.error-boundary {
  grid-area: main;
}

.error-boundary .message {
  text-align: left;
  width: 800px;
  max-width: 800px;
}

// Change icon color (black/white) based on its intent (like Blueprint's built-in icons)
.custom-icon * {
  // Turn off stroke, makes icons bolder
  // stroke: currentColor;
  fill: currentColor;
}

// Custom scrollbar style
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  /* Track */
  background-color: $dark-gray3;
}
.bp3-popover-content ::-webkit-scrollbar-track {
  /* Track */
  background-color: $light-gray4;
}

::-webkit-scrollbar-thumb {
  /* Handle */
  background-color: $dark-gray5;
}
.bp3-popover-content ::-webkit-scrollbar-thumb {
  /* Handle */
  background-color: $light-gray2;
}

::-webkit-scrollbar-thumb:hover {
  /* Handle on hover */
  background-color: $dark-gray1;
}
.bp3-popover-content ::-webkit-scrollbar-thumb:hover {
  /* Handle on hover */
  background-color: $light-gray1;
}

// Styling to match Allusion Mockups
$pt-transition-ease: cubic-bezier(0.4, 1, 0.75, 0.9) !default;
$pt-transition-ease-bounce: cubic-bezier(0.54, 1.12, 0.38, 1.11) !default;
$pt-transition-duration: 100ms !default;
.#{$ns}-tree-node-caret {
  transition: transform ($pt-transition-duration * 1.5) $pt-transition-ease;
}
// .#{$ns}-overlay-backdrop {
//   @include react-transition("#{$ns}-overlay", $pt-transition-duration * 1.5);
// }
// Fonts color
.bp3-dark {
  color: $light-gray1;
}

#query-overview {
  background: $dark-gray1;
  border-radius: 4px;
  padding: 0.25rem 0.25rem 0 0;
  position: sticky;
  top: 0.15rem;
  z-index: 999;
}
// Toolbar
#toolbar .custom-icon {
  width: 1.2rem !important;
  height: 1.2rem !important;
}
.spacer {
  width: 8rem;
  background: red;
  height: 1rem;
}

#main-toolbar {
  display: flex;
  justify-content: space-between;
  width: calc(100vw - 60vw);
  left: 16rem !important;
  position: absolute;
}

// Drawer
.bp3-drawer {
  display: flex;
  flex-direction: column;
  margin: 0;
  box-shadow: 0 0 0 1px rgba(16, 22, 26, 0.1), 0 4px 8px rgba(16, 22, 26, 0.2), 0 18px 46px 6px rgba(16, 22, 26, 0.2);
  background: $light-gray5;
  padding: 1rem;
  // button {
  //   margin-bottom: 0.3rem;
  // }
}
.bp3-drawer-header {
  padding: 0 0 0.5rem 0;
  margin-bottom: 1rem;
}
// settings panel
.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(.bp3-position-right):not(.bp3-vertical) {
  min-width: var(--inspector-width);
  width: 22rem;
}
// Hover Elements
.bp3-dark .bp3-button.bp3-minimal:hover {
  background: transparent;
}
.bp3-dark .bp3-tree-node-content:hover {
  background-color: $dark-gray3;
}

// Input field
.bp3-dark .bp3-input:disabled,
.bp3-dark .bp3-input.bp3-disabled {
  box-shadow: none;
  background: $dark-gray3;
  color: $dark-gray2;
}
.bp3-dark .bp3-input,
.bp3-light .bp3-input {
  box-shadow: none;
  background: rgba(1, 1, 1, 0.1);
  color: #f5f8fa;
  margin-bottom: 0.15rem;
}
.bp3-tag.bp3-minimal:not([class*="bp3-intent-"]) {
  background-color: $dark-gray5;
}

form,
.bp3-input-group,
.bp3-control-group {
  outline: none;
  box-shadow: none;
}
// .bp3-dark .bp3-tag-input.bp3-active, .bp3-tag-input.bp3-dark.bp3-active
.bp3-dark form &.#{$ns}-input {
  box-shadow: input-transition-shadow($input-shadow-color-focus, true), $input-box-shadow-focus;
  // background-color: $input-background-color;
  background-color: $dark-gray3;
}
form .bp3-button {
  background-color: $blue1;
}
form .bp3-icon-confirm {
  // background-color: $blue1;
  -webkit-mask-image: url(../renderer/resources/icons/checkmark.svg);
  mask-image: url(../renderer/resources/icons/checkmark.svg);
  background-size: contain;
  background-color: white;
  color: white;
}

.bp3-dark .bp3-tag-input.bp3-active,
.bp3-tag-input.bp3-dark.bp3-active {
  box-shadow: none;
  background-color: #13131357;
}
// Labels
.bp3-dark label.bp3-label {
  color: $light-gray1;
}

// Buttons
.bp3-light .bp3-button .bp3-icon,
.bp3-light .bp3-button .bp3-icon-standard,
.bp3-light .bp3-button .bp3-icon-large {
  color: $dark-gray4;
}
.bp3-button {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  padding: 5px 10px;
  vertical-align: middle;
  text-align: left;
  font-size: 14px;
  min-width: 30px;
  min-height: 30px;
}

// .bp3-button.bp3-intent-primary,
.bp3-button.bp3-intent-warning,
.bp3-button:not([class*="bp3-intent-"]),
.bp3-button.bp3-intent-danger {
  box-shadow: none !important;
  background-image: none !important;
  color: #ffffff;
}
.bp3-button.bp3-intent-warning,
.bp3-button.bp3-intent-danger {
  background-color: $blue1;
}
.bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary {
  color: $blue1;
}
.bp3-drawer .bp3-button.bp3-intent-primary {
  background-color: $dark-gray4;
}

.bp3-button::before,
.bp3-button > *,
// .bp3-tree-node-caret,
.bp3-tree-node-caret > .custom-icon,
.bp3-tree-node-content > span.custom-icon {
  margin-right: 0.25rem;
}
.bp3-tree-node-caret {
  padding: 0.25rem 0.05rem;
  margin-left: 0.5rem;
  min-width: 0rem;
}
.bp3-tree-node-caret,
.bp3-tree-node-caret-none {
  min-width: 0.7rem;
}
.bp3-dark .bp3-button-group.bp3-minimal .bp3-button:active,
.bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-active {
  background: transparent;
  color: #f5f8fa;
}
.bp3-control input:focus ~ .bp3-control-indicator {
  outline: none;
}
.bp3-control.bp3-switch input:checked ~ .bp3-control-indicator {
  background: $blue1;
}

// Menus
.inpectorHeading,
.bp3-heading {
  line-height: 19px;
  font-size: 16px;
}
.bp3-portal {
  z-index: 1000;
}
.bp3-popover.bp3-dark {
  box-shadow: none;
}
.bp3-popover.bp3-dark,
.bp3-popover.bp3-light {
  -webkit-box-shadow: 0 30px 90px 0px rgb(24, 24, 24), -3px 6px 1px 0px #181818 !important;
  // box-shadow: 0 30px 90px -20px rgb(24, 24, 24), 0 0 30px #18181b !important;
  box-shadow: 0 30px 90px 0px #181818, -3px 6px 1px 0px #181818 !important;
}
.bp3-popover,
.bp3-popover .bp3-popover-content {
  border-radius: 10px;
}
.bp3-dark .bp3-menu,
.bp3-menu,
.bp3-popover.bp3-dark .bp3-popover-content,
.bp3-dark .bp3-popover .bp3-popover-content,
.bp3-popover-content .fileTag {
  margin: 0;
  border-radius: 10px;
  background: $light-gray5;
  min-width: 180px;
  padding: 0.4rem;
  list-style: none;
  text-align: left;
  color: $dark-gray4;
}
.bp3-dark .bp3-divider {
  border-color: $light-gray2;
}
.bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary {
  color: $blue1;
}
.bp3-popover.bp3-dark .bp3-popover-arrow-fill,
.bp3-dark .bp3-popover .bp3-popover-arrow-fill {
  fill: $light-gray5;
}
.bp3-dark .bp3-menu-item::before,
.bp3-dark .bp3-menu-item > .bp3-icon {
  color: $dark-gray4;
}
.bp3-dark .bp3-menu-item.bp3-intent-primary.bp3-active,
.bp3-dark .bp3-menu-item.bp3-intent-primary.bp3-active > #tick,
.bp3-dark .bp3-menu-item.bp3-intent-primary.bp3-active > .bp3-icon,
.bp3-dark .bp3-menu-item.bp3-intent-primary.bp3-active .custom-icon {
  background: transparent;
  color: $blue1;
}
.bp3-dark .bp3-menu-item:hover,
.bp3-dark .bp3-menu-item:hover > .custom-icon,
.bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-menu-item,
.bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-menu-item {
  background-color: transparent;
  color: $blue1;
}
.contextMenuTarget {
  outline: none;
}
.bp3-menu-item,
.bp3-portal #fileTag > * {
  padding: 0.25rem 0.5rem;
}
#inspector #fileTag > *, #inspector .inpectorHeading {
  padding: 0.25rem 0rem;
  font-size:14px;
  line-height:1.2;
}

.bp3-popover-content {
  min-width: 18rem;
}
// Icons
.bp3-dark .bp3-button:not([class*="-primary"]) .bp3-icon,
.bp3-dark .bp3-button:not([class*="bp3-intent-"]) .bp3-icon-standard,
.bp3-dark .bp3-button:not([class*="bp3-intent-"]) .bp3-icon-large,
.bp3-dark .bp3-tree .bp3-icon,
.bp3-dark .bp3-tree .bp3-icon-standard,
.bp3-dark .bp3-tree .bp3-icon-large {
  color: $light-gray1;
}

.bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:hover {
  background: transparent;
  color: white;
}
.bp3-dark .bp3-button-group.bp3-minimal .bp3-button:hover,
.bp3-button:hover > .custom-icon,
.bp3-dark .bp3-button:not([class*="bp3-intent-"]) .bp3-icon:hover {
  background: transparent;
  color: white !important;
}
.bp3-dark .bp3-button-group.bp3-minimal .bp3-button:hover,
.bp3-button.bp3-minimal:hover {
  border-bottom: 2px solid $blue1;
  border-radius: 0;
  padding-bottom: 2px;
  transition: padding-bottom 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
.bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary {
  color: white;
}
.bp3-dark .bp3-disabled {
  color: $dark-gray5;
}
.bp3-light .bp3-disabled {
  color: $light-gray3;
}

.bp3-dark .bp3-button-group.bp3-minimal .bp3-button:disabled,
.bp3-dark .bp3-button-group.bp3-minimal .bp3-button:disabled:hover,
.bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-disabled,
.bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-disabled:hover {
  color: white;
}
// Tree
$pt-grid-size: 10px !default;
$tree-row-height: $pt-grid-size * 3 !default;
$tree-icon-spacing: ($tree-row-height - 100rem) / 2 !default;

@for $i from 0 through 20 {
  .#{$ns}-tree-node-content-#{$i} {
    padding-left: ($tree-row-height - $tree-icon-spacing) * $i !important;
  }
}
.bp3-tree .bp3-icon,
.bp3-tree .bp3-icon-standard,
.bp3-tree .bp3-icon-large {
  color: $light-gray1;
}

.bp3-tree-node-content-0 {
  padding-left: 0.5rem !important;
}
.bp3-dark .bp3-collapse {
  background-color: $dark-gray1;
}
.bp3-light .bp3-collapse {
  background-color: $light-gray2;
}
// Tree Selected
.bp3-dark .bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content,
.bp3-light .bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content,
.tree-node.bp3-tree-node-selected > .bp3-tree-node-content .bp3-icon,
.bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content .bp3-icon {
  background-color: transparent;
  color: $blue1;
}

// Tags
.bp3-tag {
  border-radius: 3px;
  margin: 0 0.2rem 0.2rem 0;
  padding: 0.125rem 0.4rem;
  font-size: 0.8rem;
}
.bp3-tag.bp3-intent-primary {
  background: $blue1;
  color: $light-gray4;
}
.bp3-tag.bp3-minimal:not([class*="bp3-intent-"]) {
  background-color: $dark-gray5;
}
.bp3-portal #fileTag .bp3-tag.bp3-minimal:not([class*="inspectorOpen"]) {
  background-color: $blue1;
  color: $light-gray4;
}

.bp3-dark .bp3-tag.bp3-minimal:not([class*="bp3-intent-"]),
.bp3-dark.bp3-tag.bp3-minimal:not([class*="bp3-intent-"])  {
  color: $gray4;
}
// .bp3-dark .bp3-tree-node-content:hover {
//   background-color: #252525 !important;
//   border-left: 2px solid $blue1;
// }
@for $i from 0 through 20 {
  .#{$ns}-tree-node-content-#{$i}:hover {
    background-color: #252525 !important;
    border-left: 2px solid $blue1;
    padding-left: (($tree-row-height - $tree-icon-spacing) * $i)-2px !important;
    transition: padding-left 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }
}
