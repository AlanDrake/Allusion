/** Overwriting default Blueprint variables */
$pt-grid-size: 10px;

/* using node-style package resolution in a CSS file:  */
@import "~normalize.css";

@import "~@blueprintjs/core/src/blueprint.scss";

// @import "~@blueprintjs/core/lib/css/blueprint.css";
// @import "~@blueprintjs/icons/lib/css/blueprint-icons.css";
@import "~@blueprintjs/select/lib/css/blueprint-select.css";

/**
 * Custom CSS
 */
$sidebar-width: 18em;
$thumbnail-size: 16em;

html {
  height: 100%;
}

/* Prevent text selection in all HTML elements for more native feel */
 *, *::after, *::before {
  -webkit-user-select: none;
}

body {
  background: $dark-gray4;
  margin: 0px;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

#app {
  --outliner-width: 16em;
  --inspector-width: 24em;
  --toolbar-height: 2.4rem;
  --content-area-height: calc(100vh - var(--toolbar-height));
}

main {
  grid-area: main;
  overflow: auto;
}

#layoutContainer {
  display: grid;
  grid-template-rows: var(--toolbar-height) var(--content-area-height);
  grid-template-columns: min-content 1fr min-content;
  grid-template-areas:
    "toolbar toolbar toolbar"
    "outliner main inspector";
}

#toolbar {
  grid-area: toolbar;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 3px solid $black;
}

.thumbnail {
  transition: all 0.1s ease-in-out;
  width: $thumbnail-size;
  height: $thumbnail-size;
  display: inline-block;
  position: relative;
}

.thumbnail img {
  transition: all 0.1s ease-in-out;
  width: $thumbnail-size;
  height: $thumbnail-size;
  object-fit: cover;
  cursor: pointer;
  margin-left: auto;
  margin-right: auto;
  display: block;
  transform-origin: center;
  transform: scale(1);
}

.thumbnail.selected {
  background: $pt-intent-primary;
}

.thumbnail.selected img {
  transform: scale(0.9);
}

.thumbnail.open img {
  outline-color: red;
  outline-width: 5px;
  outline-offset: -5px;
  outline-style: solid;
}

.thumbnail.droppable {
  background: $pt-intent-success;
}

.thumbnail.undroppable {
  background: $pt-intent-warning;
}

.thumbnail.droppable img {
  transform: scale(0.95);
}

.thumbnailTags {
  transition: height 0.1s ease-in-out;
  background-color: rgba(0, 0, 0, 0.5);
  width: 100%;
  height: auto;
  padding: 0.5em;
  position: absolute;
  bottom: 0;
}

.thumbnailTags > * {
  margin: 0.5em;
}

nav {
  grid-area: outliner;
  overflow: auto;
  flex-shrink: 0;
  width: 0;
  min-width: 0;
  transition: min-width 0.1s ease-out;
  background: $dark-gray3;
}

nav.outlinerOpen {
  min-width: var(--outliner-width);
  width: fit-content;
}

nav .bp3-tree {
  background-color: $dark-gray2;
}

nav .bp3-heading {
  margin: 0.5em;
}

#search-form {
  margin: 0.5em;
}

.gallery {
  width: 100%;
  height: 100%;
  padding: 8px;
}

.popoverContent {
  padding: 0.5em;
  max-width: 32em;
}

#query-overview .bp3-tag {
  margin: 0 0 0.5em 0.5em;
}

#inspector {
  grid-area: inspector;
  overflow: auto;
  flex-shrink: 0;
  width: 0;
  min-width: 0;
  transition: min-width 0.1s ease-out;
}

#inspector.inspectorOpen {
  min-width: var(--inspector-width);
  width: fit-content;
}

#inspector > section {
  border-bottom: 3px solid #181818;
  padding: 1em;
}

.inpectorHeading {
  font-weight: bold;
}

// The fill option of the MultiTagSelect does not work atm. Workaround is to manually set width
#inspector .bp3-popover-target {
  width: 100%;
}
#search-form .bp3-popover-target {
  width: 100%;
}

#filePreview > img {
  padding: 0.3em;
  background-color: #333333;
  width: 100%;
  max-height: calc(var(--inspector-width) - 2em);
  object-fit: contain;
}

#fileOverview {
  text-align: center;
}

#fileInfo {
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-column-gap: 1em;
}

#fileInfo > div {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.fileInfoValue {
  text-align: right;
}

#fileTag .bp3-tag {
  margin-bottom: 5px;
  margin-right: 5px;
}

.contextMenuTarget {
  outline-color: $pt-intent-primary;
  outline-width: 2px;
  outline-offset: -2px;
  outline-style: solid;
}

.bp3-tree-node .reorder-target {
  border-top: 2px solid $pt-intent-primary;
}

.bp3-tree-node .reorder-source {
  opacity: 0.2;
}

// Reduce default padding-left of Blueprint tree rows
// Only divided `$tree-row-height` by 2, doesn't look very nice
// Adjusted from @blueprintjs/core/src/components/tree_tree.scss
// $tree-row-height: $pt-grid-size * 3 !default;
// $tree-icon-spacing: ($tree-row-height - $pt-icon-size-standard) / 2 !default;
// @for $i from 0 through 20 {
//   .#{$ns}-tree-node-content-#{$i} {
//     padding-left: ($tree-row-height / 2 - $tree-icon-spacing) * $i;
//   }
// }

// --outliner-width + --thumbnail-size
@media (max-width: 40em) {
  #inspector.inspectorOpen {
    min-width: 0;
  }
}

// --outliner-width
@media (max-width: 16em) {
  #inspector {
    display: none;
  }

  nav {
    display: none;
  }
}

.error-boundary {
  grid-area: main;
}

.error-boundary .message {
  text-align: left;
  width: 800px;
  max-width: 800px;
}


// Change icon color (black/white) based on its intent (like Blueprint's built-in icons)
.custom-icon * {
  stroke: currentColor;
  fill: currentColor;
}

// Custom scrollbar style
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track { /* Track */
  background-color: $dark-gray3;
}
 
::-webkit-scrollbar-thumb { /* Handle */
  background-color: $dark-gray5;
}

::-webkit-scrollbar-thumb:hover { /* Handle on hover */
  background-color: $gray1; 
}
