dialog {
  background-color: var(--background-color);
  border: none;
  border-radius: 0.25rem;
  box-shadow: 3px 4px 6px 3px rgba(0, 0, 0, 0.2);
  color: var(--text-color);
  margin-top: 10vh;
  padding: 0;
  top: 0;
  bottom: 0;
  z-index: 1;

  &[open] {
    animation: appear 0.1s linear;
  }

  &[data-flyout],
  &[data-tooltip],
  &[data-contextmenu] {
    animation: none;
    margin: 0;
  }

  &[data-tooltip] {
    opacity: unset;
    pointer-events: none;
    background: var(--primary-color);
    color: white;
  }
}

.dialog-content {
  display: grid;
  grid-template:
    'dialog-icon dialog-title dialog-close'
    'dialog-information dialog-information dialog-information'
    'dialog-footer dialog-footer dialog-footer';
  grid-template-columns: min-content 1fr min-content;
  grid-template-rows: min-content 1fr min-content;
  max-height: 80vh;
  padding: 1rem 1rem 0.5rem;
  row-gap: 0.5rem;
  width: 85ch;

  > .btn-icon {
    grid-area: dialog-close;
    height: fit-content;
    min-height: fit-content;
    min-width: unset;

    .custom-icon {
      height: 0.75rem;
      width: 0.75rem;
    }
  }
}

dialog[role='alertdialog'] {
  > .dialog-content {
    grid-template: 'dialog-icon dialog-title' 'dialog-icon dialog-information' 'dialog-footer dialog-footer';
    width: 50ch;
  }

  .dialog-icon > .custom-icon {
    margin: 0;
    margin-right: 0.5rem;
    height: 2.5rem;
    width: 2.5rem;
  }
}

.dialog-icon {
  color: var(--primary-color);
  grid-area: dialog-icon;

  > .custom-icon {
    margin-right: 0.5rem;
  }
}

.dialog-title {
  color: var(--primary-color);
  font-size: medium;
  font-weight: 700;
  grid-area: dialog-title;
  margin: 0;
}

.dialog-information {
  grid-area: dialog-information;
  overflow: hidden auto;
}

.dialog-footer {
  grid-area: dialog-footer;
}

.dialog-actions {
  grid-area: dialog-actions;
  justify-content: flex-end;

  .btn {
    min-width: 100px;
  }
}

[data-popover] {
  display: none;
  z-index: 1;

  background-color: var(--background-color);
  border: none;
  border-radius: 0.25rem;
  box-shadow: 3px 4px 6px 3px rgba(0, 0, 0, 0.2);
  color: var(--text-color);

  &[data-open='true'] {
    display: unset;
  }
}

/*
  Ugly workaround for submenu focus

  Elements set to `display: none` cannot be focused before they become visible
  again because those elements are removed from the dom tree. Using the
  visibility property also results in the same, so all that is left is to paint
  it invisible.
*/
[data-submenu][data-open='false'] {
  display: unset;
  opacity: 0;
  pointer-events: none;
}

[role='tooltip'] {
  pointer-events: none;
  background: var(--primary-color);
  color: white;
  font-size: 1rem;

  .tooltip {
    display: inline-flex;
    margin: 0.5rem 1rem;
  }
}

@keyframes appear {
  from {
    transform: translateY(-3rem);
  }

  to {
    transform: translateY(0);
  }
}
